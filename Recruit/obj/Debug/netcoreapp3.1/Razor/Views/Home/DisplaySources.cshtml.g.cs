#pragma checksum "C:\Users\LENOVO\source\repos\Recruit\Recruit\Views\Home\DisplaySources.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f0f1d41b36dfd9dad4182830e78ffda6a0e5b805"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_DisplaySources), @"mvc.1.0.view", @"/Views/Home/DisplaySources.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\LENOVO\source\repos\Recruit\Recruit\Views\_ViewImports.cshtml"
using Recruit;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\LENOVO\source\repos\Recruit\Recruit\Views\_ViewImports.cshtml"
using Recruit.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\LENOVO\source\repos\Recruit\Recruit\Views\Home\DisplaySources.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f0f1d41b36dfd9dad4182830e78ffda6a0e5b805", @"/Views/Home/DisplaySources.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f7d2b0fb036cc4f9560fc5d5314046c811dd767f", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_DisplaySources : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<Source>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<h1>Sources Details</h1>\r\n");
#nullable restore
#line 5 "C:\Users\LENOVO\source\repos\Recruit\Recruit\Views\Home\DisplaySources.cshtml"
Write(Html.Kendo().Grid(Model)
    .Name("Grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.id).Title("ID");
        columns.Bound(p => p.code).Title("Code");
        columns.Bound(p => p.name).Title("Source");
        
    })
    .HtmlAttributes(new { style = "height: 550px;" })
    .Pageable(
     pageable => pageable
         .Input(true)
         .Numeric(false)
     )
    .Sortable()
    .Scrollable(scr=>scr.Height(430))
  
    //.DataSource(dataSource => dataSource
    //    .Ajax()
    //    .PageSize(20)
    // .ServerOperation(false)
     //)
);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<!--");
#nullable restore
#line 29 "C:\Users\LENOVO\source\repos\Recruit\Recruit\Views\Home\DisplaySources.cshtml"
      
    ViewBag.Title = "Sources";

#line default
#line hidden
#nullable disable
            WriteLiteral("-->\r\n");
            WriteLiteral(@"

<!--<!DOCTYPE html>
<html>
<head>
    <meta name=""viewport"" content=""width=device-width"" />
    <title>Index</title>
    <base href=""https://demos.telerik.com/kendo-ui/grid/index"">

    <style type=""text/css"">
        html {
            font-size: 14px;
            font-family: Arial, Helvetica, sans-serif;
        }
    </style>-->
");
            WriteLiteral("<!--<link rel=\"stylesheet\" href=\"~/css/layoutstyles.css\">\r\n<link rel=\"stylesheet\" href=\"~/css/tablestyles.css\">-->\r\n");
            WriteLiteral(@"<!--</head>
<body>
    <h3>Sources</h3>

    <div id=""grid2""></div>
    <script>
        $(document).ready(function () {
            getjsonnfromjsonfiledata();
            getmvcdatafromcontroller();

    });

        function getmvcdatafromcontroller() {
              var model =");
#nullable restore
#line 68 "C:\Users\LENOVO\source\repos\Recruit\Recruit\Views\Home\DisplaySources.cshtml"
                      Write(Html.Raw(Json.Serialize(Model)));

#line default
#line hidden
#nullable disable
            WriteLiteral(@";
            $('#grid2').kendoGrid({
            dataSource: {
                data : model,
                pageSize :5
            },
            selectable : ""single"",
            schema: {
                model: {
                    fields: {
                        id: { type: ""long"" },
                        code: { type: ""string"" },
                        name: { type: ""string"" },

                    }
                }
            },
            sortable : {
                mode :""single"",
                allowUnsort : ""false""
            },
            serverPaging: true,
            height: 300,
            pageSize:10,
            pageable : {
                refresh : false,
                pageSizes : true,
                buttonCount:10
            },
            columns: [
                { field: ""id"", title: ""id"", width: ""25%"" },
                { field: ""code"", title: ""Code"", width: ""150px"" },
                { field: ""name"", title: ""Source Name"", width: ");
            WriteLiteral(@"""150px"" }

            ]
        });
        }
        function getjsonnfromjsonfiledata() {
            $(""#grid"").kendoGrid({
                dataSource: {
                    type: ""odata"",
                    transport: {
                        read: ""https://demos.telerik.com/kendo-ui/service/Northwind.svc/Customers""
                    },
                    pageSize: 20
                },
                height: 550,
                groupable: true,
                sortable: true,
                pageable: {
                    refresh: true,
                    pageSizes: true,
                    buttonCount: 5
                },
                columns: [{
                    template: ""<div class='customer-photo'"" +
                        ""style='background-image: url(../content/web/Customers/#:data.CustomerID#.jpg);'></div>"" +
                        ""<div class='customer-name'>#: ContactName #</div>"",
                    field: ""id"",
                    title: ""id"",
");
            WriteLiteral(@"                    width: 240
                }, {
                    field: ""code"",
                    title: ""Code""
                }, {
                    field: ""name"",
                    title: ""Source Name""
                }]
            });
        }

        function getRootUrl() {
            return window.location.origin ? window.location.origin + '/' : window.location.protocol + '/' + window.location.host + '/';
        }
    </script>
    <div>
        <a asp-action=""Index"">Back to Dashboard</a>
    </div>


");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n");
#nullable restore
#line 149 "C:\Users\LENOVO\source\repos\Recruit\Recruit\Views\Home\DisplaySources.cshtml"
          await Html.RenderPartialAsync("_ValidationScriptsPartial");

#line default
#line hidden
#nullable disable
                WriteLiteral("    ");
            }
            );
            WriteLiteral("</body>\r\n\r\n</html>-->\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<Source>> Html { get; private set; }
    }
}
#pragma warning restore 1591
